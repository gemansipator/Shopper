VSCode:
Установить плагины 
  Auto Close Tag
  Auto Complete Tag
  Auto Rename Tag
  Code Runner
  CSS Peek
  eCSStractor for VSCode
  ES5 to ES6
  HTML CSS Support
  Iconify IntelliSense
  Import Cost
  JavaScript (ES6) code snippets
  Prettier - Code formatter
  Russian Language Pack for Visual Studio
  vscode-icons
Установить git

Создать проект , загрузить его на github

Блочная модель
Специфичность
Принцип каскада
Наследование
Контекст наложения 
CSS-правило
Комментарии в CSS 
Подключение стилей
display 

1.Что такое блочная модель (своими словами )
2.Что такое html ?
3.Перечислите 5 основных свойств CSS которые отвечают за размеры элемента на странице
4.Зачем нужен тег <h1> ?
5.Что такое CSS ? Дайте определение.
6.Что такое Специфичность ?
7.Напишите 3 CSS селектора ?
8.За что отвечает тег <head> ?
9.Чему равна специфичность - div ?
10.Что делает это CSS-свойство - margin: 0; ?
11.Чему равна специфичность - .title #logo?
12.Зачем нужен тег <footer>?
13.Чему равна специфичность - .icon>span.link__first
14.Какие элементы можно помещать в тег <ul></ul> и <ol></ol> ?
15.Чему равна специфичность выражения - header section.h.logo>#5 #logo
16.Что такое Принцип каскада ?
17.Какие единицы измерения вы знаете ?
18.Что такое Наследование классов CSS ?
19.С помощь какого тега можно добавить картинку на страницу ? 
20.За что отвечает CSS-свойство display? 
21.Проценты это относительная единица измерения ?
22.Что такое git ? Зачем он нужен ?
23.Как подключить стили к странице ? 
24.Как открыть инспектор кода на вашем компьютере ? 







1.Больше смысловые чем стилистические 
<h1></h1>
<h2></h2>
<h3></h3>
<h4></h4>
<h5></h5>
<h6></h6>

2.Для любого текста - важно что html воспринимает этот тег как новый абзац 
<p></p>

3.Для выделения слова или предложения но без переноса и отделения от текста
<span></span>

4. division — раздел, секция - универсальный тег , главный строительный блок 
<div></div>

5. Коментарии нужны чаще всего что бы обозначить для других какой то кусок кода 
<-- --> 

6. На странице может быть несколько тегов <header>. 
Но их нельзя помещать в контейнеры <footer>, <address> или другой <header>.
Этот тег нуже что бы определить шапку страницы или секции.
<header></header>

7. Футер или "Подвал" определяет какую то техническую информацию , так же является семантическим тегом.
<footer></footer>

8.Основной контент сайта , именно то что есть уникальное на странице , полезен когда страниц несколько.
<main></main>

9.Секция нужна что бы разделить сайт на логические блоки. Секция отвечает за какую то тему или какую то функцию 
<section></section>

10.Навигация сайта , помогает роботам определить навигацию по сайту, может быть несколько на странице но лучше не перебарщивать с этим тегом и отмечать только основное.
<nav></nav>

11.Выводит подстрочный и надстрочный текст 
<sub></sub>
<sup></sup>

12.Удаленный текст / зачеркнутый текст (как пример - цена )
<del></del>

13.Ссылка на что то 
<a href="maxima@gmail.com">maxima@gmail.com</a>

14.Нужен что бы определить какую то контактную информацию 
<address>
  По почте: <a href="maxima@gmail.com">maxima@gmail.com</a><br>
  По телефону: <a href="tel:+88005553535">+8(800)555-35-35</a>
</address>

15.Для подключения к странице внешнего файла 
<link href="style.css" rel="stylesheet">

16.Предназначен данный тег для переноса строки , но т.к. сейчас вся визуальная часть происходит на стороне CSS то нет единого мнения когда и как использовать данный тег 
<br>

17.Горизонтальная черта , предназначена для того что бы отделить контент, например два обзаца 
<hr>

<em> — смысловое ударение в предложении;
<strong> — повышенная важность;
<mark> — выделение «маркером»;
<dfn> — термин или расшифровка сокращения.

18.Картинка 

srcset — атрибут, принимающий несколько строк, разделённых запятой. Каждая строка должна содержать ссылку на картинку и указание фактической ширины картинки, значения разделяются пробелом. При этом после ширины ставится единица измерения w, а не px.
sizes — атрибут, в котором указывается одно или несколько условий через запятую. Каждая строка состоит из медиавыражения и ширины блока для картинки, разделённых пробелом. Ширину блока для картинки можно указывать в любых единицах измерения, кроме процентов.

<img src="logo.png" alt="Логотип нашей компании" 
    decoding
    loading
    srcset="
      logo-small.png 320w,
      logo-medium.png 480w,
      logo-large.png 800w"
    sizes="
      (max-width: 320px) 280px,
      (max-width: 480px) 440px,
      800px" 
      width  height>

19. На странице можно сделать сколько угодно форм. Но одновременно пользователь сможет отправить только одну заполненную форму.
<form action="" method="post">
  <label for="post-name">
    Имя  гостя:
    <input id="post-name" type="text" name="name">
  </label>
  <button type="submit">Сохранить</button>
</form>

20. Поля для ввода , они имею много типов и могут быть чем угодно , но суть остается одиноковой 
с помощью инпута пользователь может взаимодействовать со страницей

<label for="name">Введите название (от 4 до 8 символов):</label>

<input
  type="text"
  id="name"
  name="name"
  required
  minlength="4"
  maxlength="8"
  size="10"
>

21.Стандартная кнопка , у нее есть целый вагон атрибутов 
 <button type="submit">Сохранить</button>

22. Выпадающий список 
<form>
  <label for="city-select">Ваш город</label>
  <select name="city" id="city-select">
    <option value="">-- Выберите город --</option>
    <option value="petersburg">Санкт-Петербург</option>
    <option value="samara">Самара</option>
    <option value="perm">Пермь</option>
    <option value="novosibirsk">Новосибирск</option>
  </select>
</form>

23. Списки 
<ol>
<ul>
<li>
<dl>, <dd>, <dt>

24. таблицы
<table></table>
<tr></tr>
<td></td>

25. не малозначительные теги которые тоже нужны 
<audio>
<video>
<iframe>
<source>
<canvas>


 


https://githowto.com/ru - гайд по git (не путать с github)
https://githowto.com/ru/setup - инструкция по установке и настройке git
https://training.github.com/downloads/ru/github-git-cheat-sheet/ - шпаргалка по git 














Стили во время CSS-переходов (transition);
Браузерные стили с !important;
Пользовательские стили с !important;
Авторские (мы с вами пишем именно эти стили) стили с !important;
Стили во время анимаций (animation);
Обычные (т. е. без !important) авторские стили;
Обычные пользовательские стили;
Обычные браузерные стили.

